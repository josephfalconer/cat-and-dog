// ====================================
// Dog, cat, obstacles and food
// ===================================

$svg: '.svg';

%animal {
	display: block;
	position: absolute;
	top: remcalc(1);
	left: remcalc(1);
	@include square(remcalc(63));
	transition: transform 0.2s;

	@include mq(large) {
		@include square(remcalc(70));
	}
}

@mixin food-bgs($foods...) {
	@each $food in $foods {
		&.#{$food} {
			$url: #{$static-image-path}food/#{$food}#{$svg};
			/*background: url('../img/food/#{$food}.png') no-repeat center;*/
			background: url($url) no-repeat center;
			background-size: 50%;
		}
	}
}
@mixin animal-bgs($animals, $angles) {
	@each $animal in $animals {
		@each $angle in $angles {
			.#{$animal}-#{$angle} {
				$url: #{$static-image-path}#{$animal}/#{$animal}-#{$angle}#{$svg};
				// background: url(#{$static-image-path}#{$animal}-#{$angle}.png) no-repeat center;
				background: url($url) no-repeat center;
			}
		}
	}	
}

$animals	: dog, cat;
$angles		: up, down, left, right;

i {
	@include transition($tn-norm: width 50ms, $tn-norm-sd: opacity 1s);
	@include box(100%);
	@extend %total-centered;
	display: block;
    opacity: 1;

	&.obstruction {
		@include dimensions(90%, 90%);
		background: $brown;
		border-radius: 50%;
		border: 4px black solid;
	    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.5);
	    @include mq(small) {
	    	border: 2px black solid;
		    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);
	    }
	}

		

	@include food-bgs(slice, steak, fish, drumstick, salami, sausage, meat)

}

.cat {
	@extend %animal;
}

.dog {
	@extend %animal;
}

@include animal-bgs($animals, $angles);

.food.shrink {
	width: 60%;
	opacity: 0;
}